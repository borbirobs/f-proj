# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys


class TestTriangle():
    def setup_method(self, method):
        self.driver = webdriver.Chrome('/usr/local/bin/chromedriver')
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_triangle(self):
        self.driver.get('https://borbirobs.github.io/f-proj/cica/triangles.html')
        self.driver.set_window_size(1280, 721)
        self.driver.find_element(By.ID, "a-input").click()
        self.driver.find_element(By.ID, "a-input").send_keys("2")
        self.driver.find_element(By.ID, "b-input").click()
        self.driver.find_element(By.ID, "b-input").send_keys("2")
        self.driver.find_element(By.ID, "c-input").click()
        self.driver.find_element(By.ID, "c-input").send_keys("2")
        element = self.driver.find_element(By.ID, "calculate-button")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "html")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        self.driver.find_element(By.CSS_SELECTOR, "html").click()
        self.driver.find_element(By.ID, "calculate-button").click()
        assert self.driver.find_element(By.XPATH,
                                        "//ul[@id=\'result-ul\']/li[last()]").text == "a = 2, b = 2, c = 2: Egyenlő oldalú"

